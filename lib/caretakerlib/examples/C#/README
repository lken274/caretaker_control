This sample application is a C# application illustrating use of libcaretaker_clr to monitor the
Caretaker device. This application illustrates using the Caretaker.DeviceObserver asynchronous
interface for monitoring.

1. Environment Setup
--------------------
Download and install the following programs on the PC to build the application.

	* Visual Studio 2017 or later
	* .NET Framework 4.0 or later
	* Common Language Runtime (CLR) 4.0

2. Bluetooth Setup
------------------------
If connecting via BLE, setup Bluetooth on the PC that will run the sample application.
Plug TI CC2540 dongle or similar dongle into a USB port on the PC then install the necessary drivers.
After successful setup, the dongle will appear as a virtual COM port that the application will use
to communicate with the Caretaker device. Note the library automatically detects the dongle, so after
setup you only need to plug it into the PC then run the sample application.

3. USB Setup (Caretaker 5 only)
--------------------------------
If connecting via USB, turn on the Caretaker 5, then navigate to USB settings. Enable "USB" and then
"USB data transfer mode." Plug the Caretaker 5 into the PC using standard USB C cable.

4. WiFi Setup (Caretaker 5 only)
--------------------------------
If connecting via WiFi, ensure the PC and the Caretaker 5 are connected to the same WiFi network.

5. Building the sample application
----------------------------------
Start Visual Studio 2019 then open CaretakerCSharpSampleApp.sln. Set the active solution to x64
if using the 64-bit library or x86 if using the 32-bit library then click Build->Rebuild Solution
in the tool bar to build the sample App.

6. Running the sample application with BLE connection
-----------------------------------------------------
Plug the BLE dongle into the PC.

Next, start the sample application from the Visual Studio IDE using the Local Windows Debugger play
button, or by double-clicking the CaretakerCSharpSampleApp.exe located in the bin directory.

Next, enter the Caretaker serial number into the connect text box located in the status bar, then
press the Connect button to start connecting. The status bar changes to blue after the connection
is established.

Note you must press the Caretaker device button for the device to connect to the App. The device
displays an orange BLE icon when it is advertising for a connection, the icon turns blue after
the connection is established.

Next, attach the finger cuff then press the App Start button to start a calibration and then take
measurements.

7. Running the sample application with USB connection
-----------------------------------------------------
Plug the Caretaker 5 into the PC using standard USB C cable.

Next, start the sample application from the Visual Studio IDE using the Local Windows Debugger play
button, or by double-clicking the CaretakerCSharpSampleApp.exe located in the bin directory.

Press the Connect button to start connecting. The status bar changes to blue after the connection
is established. If connection failed, unplug from PC, restart the Caretaker, then replug into PC.

Next, attach the finger cuff then press the App Start button to start a calibration and then take
measurements.

8. Running the sample application with WiFi connection
------------------------------------------------------
Enable Caretaker 5 WiFi.

Next, start the sample application from the Visual Studio IDE using the Local Windows Debugger play
button, or by double-clicking the CaretakerCSharpSampleApp.exe located in the bin directory.

Next, enter the Caretaker serial number into the connect text box located in the status bar, then
press the Connect button to start connecting. The status bar changes to blue after the connection
is established.

Press the Connect button to start connecting. The status bar changes to blue after the connection
is established.

Next, attach the finger cuff then press the App Start button to start a calibration and then take
measurements.
